package bot

import (
	"gopkg.in/telebot.v4"

	"log"
	"context"
	"fmt"

	"prvbot/internal/db"
	"prvbot/internal/buttons"
)

func HandleUserProfile(c telebot.Context) error {
	user, err := db.GetUserByChatID(context.Background(), c.Chat().ID)
	if err != nil {
		log.Println("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err)
		return c.Respond(&telebot.CallbackResponse{Text: "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø–æ–ª–Ω—å—Ç–µ –±–∞–ª–∞–Ω—Å."})
	}

	text := fmt.Sprintf("üë§ *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\nüí≥ –ë–∞–ª–∞–Ω—Å: *%d* ‚≠êÔ∏è", user.Balance)

	markup := &telebot.ReplyMarkup{}
	btnTopUp := markup.Data("üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", buttons.BtnTopUp.Unique)
	btnRefundStars := markup.Data("‚öíÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", buttons.BtnRefundStars.Unique)
	btnBack := markup.Data("‚óÄÔ∏è –ù–∞–∑–∞–¥", buttons.BtnBackToMenu.Unique)
	btnTopOfBalance := markup.Data("üèÖ –¢–æ–ø –ø–æ –±–∞–ª–∞–Ω—Å—É", buttons.BtnTopOfBalance.Unique)

	markup.Inline(
		markup.Row(btnTopUp),
		markup.Row(btnTopOfBalance),
		markup.Row(btnRefundStars),
		markup.Row(btnBack),
	)

	return c.Edit(text, &telebot.SendOptions{
		ParseMode:   telebot.ModeMarkdown,
		ReplyMarkup: markup,
	})
}