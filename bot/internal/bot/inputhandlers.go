package bot

import (
	"gopkg.in/telebot.v4"
	
	"context"
	"log"
	"strconv"
	"strings"
	"fmt"
	"time"

	"prvbot/internal/userstates"
	"prvbot/internal/db"
	"prvbot/internal/topup"
	"prvbot/internal/gifting"
	"prvbot/internal/refund"
)

func HandlePhotoInput(c telebot.Context) error {
	return HandleTextInput(c)
}

func HandleTextInput(c telebot.Context) error {
	log.Println("üì• –í—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç –æ—Ç", c.Chat().ID, ":", c.Text())
	chatID := c.Chat().ID
	state := userstates.Get(chatID)
	log.Println("üîé –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", state)


	switch userstates.Get(chatID) {
	case "awaiting_topup":
		return topup.HandleTopUpInput(c)

	case "awaiting_gift_number":
		return gifting.HandleGiftInput(c)

	case "awaiting_ticket":
	userstates.Clear(chatID)

	adminIDs, err := db.GetSupportAdmins(context.Background())
	if err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è support-–∞–¥–º–∏–Ω–æ–≤: %v", err)
		return c.Send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
	}

	for _, adminID := range adminIDs {
		_, err := c.Bot().Forward(&telebot.Chat{ID: adminID}, c.Message())
		if err != nil {
			log.Printf("[TicketForward] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ %d: %v", adminID, err)
		}
	}

	return c.Send("‚úÖ –í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

	case "awaiting_revoke_access_chat_id":
	userstates.Clear(chatID)

	chatIDStr := strings.TrimSpace(c.Text())
	targetID, err := strconv.ParseInt(chatIDStr, 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
	}

	err = db.RevokeUserAccess(targetID)
if err != nil {
	switch err.Error() {
	case "–Ω–µ –Ω–∞–π–¥–µ–Ω":
		return c.Send("üö´ –£–∫–∞–∑–∞–Ω–Ω—ã–π chat_id –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
	case "–Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞":
		return c.Send("‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç–∞.")
	default:
		log.Printf("‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∑—ã–≤–µ –¥–æ—Å—Ç—É–ø–∞: %v", err)
		return c.Send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏.")
	}
	}

	return c.Send(fmt.Sprintf("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `%d` –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã –∏ –ø–æ—Ç–µ—Ä—è–ª –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.", targetID), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})

	case "awaiting_admin_revoke":
	userstates.Clear(chatID)
	chatIDStr := strings.TrimSpace(c.Text())
	targetID, err := strconv.ParseInt(chatIDStr, 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id")
	}

	const protectedAdminID int64 = 6142264859
	if targetID == protectedAdminID {
	return c.Send("‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ —É —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
	}

	err = db.RevokePermission(context.Background(), targetID, "admin_access")
	if err != nil {
		return c.Send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞: " + err.Error())
	}

	return c.Send(fmt.Sprintf("üìõ –ü—Ä–∞–≤–∞ –Ω–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Å–Ω—è—Ç—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `%d`", targetID), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})

	case "awaiting_commission_value":
	userstates.Clear(chatID)

	text := strings.TrimSpace(c.Text())
	rate, err := strconv.ParseFloat(text, 64)
	if err != nil || rate < 0.02 || rate > 1 {
		return c.Send("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ–º–∏—Å—Å–∏—é –æ—Ç 0.02 –¥–æ 1 (–Ω–∞–ø—Ä–∏–º–µ—Ä: 0.05)")
	}

	db.GlobalCommissionRate = rate
	return c.Send(fmt.Sprintf("‚úÖ –ö–æ–º–∏—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: *%.2f%%*", rate*100), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})

	case "awaiting_refund_revoke":
	userstates.Clear(chatID)
	chatIDStr := strings.TrimSpace(c.Text())
	targetID, err := strconv.ParseInt(chatIDStr, 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id")
	}

	const protectedAdminID int64 = 6142264859
	if targetID == protectedAdminID {
	return c.Send("‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ —É —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
	}

	err = db.RevokePermission(context.Background(), targetID, "refund_access")
	if err != nil {
		return c.Send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞: " + err.Error())
	}

	return c.Send(fmt.Sprintf("üìõ –ü—Ä–∞–≤–∞ –Ω–∞ —Ä–µ—Ñ–∞—É–Ω–¥ —Å–Ω—è—Ç—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `%d`", targetID), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})

	case "awaiting_tech_revoke":
	userstates.Clear(chatID)
	chatIDStr := strings.TrimSpace(c.Text())
	targetID, err := strconv.ParseInt(chatIDStr, 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id")
	}

	const protectedAdminID int64 = 6142264859
	if targetID == protectedAdminID {
	return c.Send("‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ —É —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
	}

	err = db.RevokePermission(context.Background(), targetID, "technical_support")
	if err != nil {
		return c.Send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞: " + err.Error())
	}

	return c.Send(fmt.Sprintf("üìõ –ü—Ä–∞–≤–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–Ω—è—Ç—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `%d`", targetID), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})

	case "awaiting_global_broadcast":
	userstates.Clear(chatID)

	ctx := context.Background()
	chatIDs, err := db.GetAllUsers(ctx)
	if err != nil {
		log.Printf("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: %v", err)
		return c.Send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É.")
	}

	bot := c.Bot().(*telebot.Bot)

	if c.Message().Photo != nil {
		photo := c.Message().Photo
		caption := strings.TrimSpace(c.Message().Caption)

		go func() {
			for _, id := range chatIDs {
				recipient := &telebot.Chat{ID: id}
				newPhoto := &telebot.Photo{
					File:    photo.File,
					Caption: caption,
				}
				_, err := bot.Send(recipient, newPhoto)
				if err != nil {
					log.Printf("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ %d: %v", id, err)
				}
				time.Sleep(30 * time.Millisecond)
			}
			log.Printf("‚úÖ –§–æ—Ç–æ + –ø–æ–¥–ø–∏—Å—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã %d –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.", len(chatIDs))
		}()

		return c.Send("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")
	}

	text := strings.TrimSpace(c.Text())
	if text == "" {
		return c.Send("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	go func() {
		for _, id := range chatIDs {
			recipient := &telebot.Chat{ID: id}
			_, err := bot.Send(recipient, text)
			if err != nil {
				log.Printf("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ %d: %v", id, err)
			}
			time.Sleep(30 * time.Millisecond)
		}
		log.Printf("‚úÖ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ %d –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.", len(chatIDs))
	}()

	return c.Send("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")

	case "awaiting_techsupport_chat_id":
	userstates.Clear(chatID)

	chatIDStr := strings.TrimSpace(c.Text())
	newChatID, err := strconv.ParseInt(chatIDStr, 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	err = db.GrantPermission(context.Background(), newChatID, "technical_support")
	if err != nil {
		log.Printf("‚ùó –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ —Ç–µ—Ö-–¥–æ—Å—Ç—É–ø–∞: %v", err)
		return c.Send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
	}

	return c.Send(fmt.Sprintf("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `%d` –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ!", newChatID), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})

	case "awaiting_refund_chat_id":
	userstates.Clear(chatID)

	chatIDStr := strings.TrimSpace(c.Text())
	newChatID, err := strconv.ParseInt(chatIDStr, 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	err = db.GrantPermission(context.Background(), newChatID, "refund_access")
	if err != nil {
		log.Printf("‚ùó –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ –ø—Ä–∞–≤ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç: %v", err)
		return c.Send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
	}

	return c.Send(fmt.Sprintf("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `%d` –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –≤–æ–∑–≤—Ä–∞—Ç—É –∑–≤—ë–∑–¥!", newChatID), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})

	case "awaiting_refund_input":
	args := strings.Fields(c.Text())
	if len(args) != 2 {
		return c.Send("‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `user_id charge_id`", &telebot.SendOptions{ParseMode: telebot.ModeMarkdown})
	}

	userID, err := strconv.ParseInt(args[0], 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π user_id. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	chargeID := args[1]

	err = refund.TryRefundTransaction(context.Background(), c.Bot().(*telebot.Bot), userID, chargeID)
	if err != nil {
		return c.Send("‚ùå " + err.Error() + "\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
	}

	userstates.Clear(chatID)
	return c.Send("‚úÖ –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω")

	case "awaiting_grant_chat_id":
	userstates.Clear(chatID)

	chatIDStr := strings.TrimSpace(c.Text())
	newChatID, err := strconv.ParseInt(chatIDStr, 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	err = db.CreateUserIfNotExists(newChatID)
	if err != nil {
		log.Printf("‚ùó –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %v", err)
		return c.Send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –µ—Å—Ç—å.")
	}

	return c.Send(fmt.Sprintf("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `%d` –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!", newChatID), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})

	case "awaiting_channel_1", "awaiting_channel_2", "awaiting_channel_3":
	state := userstates.Get(chatID)               
	userstates.Clear(chatID)                      

	channelName := strings.TrimSpace(c.Text())
	if !strings.HasPrefix(channelName, "@") {
		return c.Send("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `@`. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	field := map[string]string{
		"awaiting_channel_1": "channel1",
		"awaiting_channel_2": "channel2",
		"awaiting_channel_3": "channel3",
	}[state]

	if field == "" {
		log.Printf("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–æ–ª–µ: state='%s'", state)
		return c.Send("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	err := db.UpdateChannelField(chatID, field, channelName)
	if err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è %s: %v", field, err)
		return c.Send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–Ω–∞–ª.")
	}

	return c.Send(fmt.Sprintf("‚úÖ –ö–∞–Ω–∞–ª %s —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: %s", field, channelName))

	case "awaiting_admin_chat_id":
	userstates.Clear(chatID)

	chatIDStr := strings.TrimSpace(c.Text())
	newChatID, err := strconv.ParseInt(chatIDStr, 10, 64)
	if err != nil {
		return c.Send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}

	err = db.GrantPermission(context.Background(), newChatID, "admin_access")
	if err != nil {
		log.Printf("‚ùó –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤: %v", err)
		return c.Send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.")
	}

	return c.Send(fmt.Sprintf("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `%d` –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!", newChatID), &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})
	}

	return nil
}