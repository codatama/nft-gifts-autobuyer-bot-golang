package adminpanel

import (
	"gopkg.in/telebot.v4"

	"time"
	"context"
	
	"prvbot/internal/db"
	"prvbot/internal/userstates"
)

func HandleGlobalBroadcastRequest(c telebot.Context) error {
	chatID := c.Chat().ID
	userstates.Set(chatID, "awaiting_global_broadcast")

	go func(chatID int64, bot *telebot.Bot) {
		time.Sleep(30 * time.Second)
		if userstates.Get(chatID) == "awaiting_global_broadcast" {
			userstates.Clear(chatID)
			bot.Send(&telebot.Chat{ID: chatID}, "‚è≥ –í—Ä–µ–º—è –Ω–∞ –≤–≤–æ–¥ –∏—Å—Ç–µ–∫–ª–æ.")
		}
	}(chatID, c.Bot().(*telebot.Bot))

	return c.Send("üì® –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é), –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:",
		&telebot.SendOptions{ParseMode: telebot.ModeMarkdown})
}

func HandleRefundRequest(c telebot.Context) error {
	chatID := c.Chat().ID

	ok, err := db.HasRefundAccess(context.Background(), chatID)
	if err != nil || !ok {
		return c.Send("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞.")
	}

	userstates.Set(chatID, "awaiting_refund_input")

	go func(chatID int64, bot *telebot.Bot) {
		time.Sleep(30 * time.Second)
		if userstates.Get(chatID) == "awaiting_refund_input" {
			userstates.Clear(chatID)
			bot.Send(&telebot.Chat{ID: chatID}, "‚è≥ –í—Ä–µ–º—è –Ω–∞ –≤–≤–æ–¥ –∏—Å—Ç–µ–∫–ª–æ.")
		}
	}(chatID, c.Bot().(*telebot.Bot))

	return c.Send("üí∏ –í–≤–µ–¥–∏—Ç–µ `user_id` –∏ `charge_id`, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ù–∞–ø—Ä–∏–º–µ—Ä:\n`123456789 9876-chrge`", &telebot.SendOptions{
		ParseMode: telebot.ModeMarkdown,
	})
}